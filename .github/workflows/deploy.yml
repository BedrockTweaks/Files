name: Build and deploy files

on:
  push:
    branches:
      - main
      - devel
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'

jobs:
  check-branch-build:
    name: Get branch name
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.check_step.outputs.branch }}
      status: ${{ steps.check_step.outputs.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get current branch and repo
        id: check_step
        run: |
          branch=${{ github.ref_name}}
          branch=${branch##*/}
          echo "branch=${branch}" >> $GITHUB_ENV
          status="${{ job.status }}"
          echo "status=${status}" >> $GITHUB_ENV
          echo "Branch is $branch."

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: check-branch-build
    steps:
      - name: Mark Git directory as safe
        run: |
          git config --global --add safe.directory /opt/bedrock_tweaks/files
          git config --global --add safe.directory /opt/bedrock_tweaks/files_dev

      - name: Update files Production
        if: github.ref_name == 'main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_ADDRESS }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: cd /opt/bedrock_tweaks/files && git reset --hard && git clean -fd && git pull ${{ secrets.REPOSITORY_URL }}

      - name: Update files Development
        if: github.ref_name == 'devel'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_ADDRESS }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: cd /opt/bedrock_tweaks/files_dev && git reset --hard && git clean -fd && git pull ${{ secrets.REPOSITORY_DEV_URL }}

      - name: Output job status
        id: job-status
        if: ${{ always() }}
        run: |
          echo "status=${{ job.status }}" >> $GITHUB_OUTPUT
